version: '3.8'

services:
  patient-db:
    image: postgres:15
    container_name: patient-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - patient-data:/var/lib/postgresql/data
    networks:
      - microservice-net

  auth-service-db:
    image: postgres:15
    container_name: auth-service-db
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - auth-service-data:/var/lib/postgresql/data
    networks:
      - microservice-net

  patient-service:
    build: patient-service
    container_name: patient-service

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9002
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - patient-db
    networks:
      - microservice-net


  billing-service:
    build: billing-service
    image: billing-service
    container_name: billing-service
    ports:
      - "4002:4002"
      - "9002:9002"
    networks:
      - microservice-net


  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservice-net


  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
    - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservice-net


  analytics-service:
    build: analytics-service
    image: analytics-service:latest
    container_name: analytics-service
    ports:
      - "4003:4003"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

    networks:
      - microservice-net


  api-gateway:
    build: api-gateway
    image: api-gateway
    container_name: api-gateway
    ports:
      - "4004:4004"
    environment:
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
    depends_on:
      - patient-service
      - auth-service
    networks:
      - microservice-net

  auth-service:
    build: auth-service
    container_name: auth-service
    image: auth-service:latest
    environment:
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/${AUTH_POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      JWT_SECRET: ${JWT_SECRET}
    networks:
     - microservice-net



volumes:
  patient-data:
  auth-service-data:


networks:
  microservice-net:
    driver: bridge

